// Code generated by MockGen. DO NOT EDIT.
// Source: ./app/analyze/reporters/reporter.go

package reporters

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	result "github.com/golangci/golangci-worker/app/analyze/linters/result"
)

// MockReporter is a mock of Reporter interface
type MockReporter struct {
	ctrl     *gomock.Controller
	recorder *MockReporterMockRecorder
}

// MockReporterMockRecorder is the mock recorder for MockReporter
type MockReporterMockRecorder struct {
	mock *MockReporter
}

// NewMockReporter creates a new mock instance
func NewMockReporter(ctrl *gomock.Controller) *MockReporter {
	mock := &MockReporter{ctrl: ctrl}
	mock.recorder = &MockReporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockReporter) EXPECT() *MockReporterMockRecorder {
	return _m.recorder
}

// Report mocks base method
func (_m *MockReporter) Report(ctx context.Context, ref string, issues []result.Issue) error {
	ret := _m.ctrl.Call(_m, "Report", ctx, ref, issues)
	ret0, _ := ret[0].(error)
	return ret0
}

// Report indicates an expected call of Report
func (_mr *MockReporterMockRecorder) Report(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Report", reflect.TypeOf((*MockReporter)(nil).Report), arg0, arg1, arg2)
}
