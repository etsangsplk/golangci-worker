// Code generated by MockGen. DO NOT EDIT.
// Source: ./app/analyze/status/updater.go

package status

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUpdater is a mock of Updater interface
type MockUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockUpdaterMockRecorder
}

// MockUpdaterMockRecorder is the mock recorder for MockUpdater
type MockUpdaterMockRecorder struct {
	mock *MockUpdater
}

// NewMockUpdater creates a new mock instance
func NewMockUpdater(ctrl *gomock.Controller) *MockUpdater {
	mock := &MockUpdater{ctrl: ctrl}
	mock.recorder = &MockUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockUpdater) EXPECT() *MockUpdaterMockRecorder {
	return _m.recorder
}

// UpdateStatus mocks base method
func (_m *MockUpdater) UpdateStatus(ctx context.Context, analysisID string, status string) error {
	ret := _m.ctrl.Call(_m, "UpdateStatus", ctx, analysisID, status)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateStatus indicates an expected call of UpdateStatus
func (_mr *MockUpdaterMockRecorder) UpdateStatus(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "UpdateStatus", reflect.TypeOf((*MockUpdater)(nil).UpdateStatus), arg0, arg1, arg2)
}
